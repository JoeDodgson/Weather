index.html
DONE Header across top of page
DONE 1 div container for the rest of the content
    DONE 3 column container:
        DONE Search bar
        DONE History of cities (ul) - we will dynamically append li elements to this in the script.js
    DONE 9 column container:
        DONE div for current weather conditions - class = row
            DONE 12 column container
                DONE h3 header - name of city + current date + image of current weather (icon given by API)
                DONE h5 - Temp
                DONE h5 - Humidity
                DONE h5 - Wind speed
                DONE h5 - UV - color coded depending on value. if UV<3 green; else if UV<7; else yellow; else red.
        DONE div for forecast weather conditions - class = row
            DONE 12 column container
                DONE Header - 5-day weather forecast
                DONE 5 no. equal size + style cards. 2 column 
                    DONE date
                    DONE weather icon
                    DONE temperature
                    DONE Humidity


script.js
DONE Global variable = API key
DONE Global variable getting the local storage (Array). If null, set default to be empty
DONE Attach click event to the list items - when clicked, the li item passes the cityName into the function getWeather (and executes this function)
DONE jquery ready function
    DONE -Check the local storage variable. If something is there, then call createCityHistory
    DONE -If local storage array exists then call getWeather function and pass the array[array.length - 1] into the function.
    DONE -Search button click
        DONE -Get the input value
        DONE -Clear the input form
        DONE -Add the input value to the local storage. 
            DONE If (indexof the new searched city = -1){
                DONE push the newly searched city into this array
                DONE call function createCityHistory, passing the city name
            }
            DONE Call getWeather and pass the cityName
DONE Define getWeather function:
    DONE -Takes an argument of cityName
    DONE -Concatenates the city name together with the rest of the OWM API call URL and the API key
    DONE -Performs an ajax call to retrieve data using the concatenated URL
    DONE -If successful:
        DONE -update the current weather data displayed
        DONE -call the function to update the UV index
        -call the function to update the 5-day forecast
        DONE -Pass data.coordinate.lat and data.coordinate.lon to getUVIndex() (and execute this function)
DONE Define the UV index function:
    DONE -Takes in the lat and lon coordinates
    DONE -Concatenates the coordinates into a URL and performs the API call
    DONE -If successful:
        DONE -Retrieve the UV value
        DONE -Update the UV value displayed
        DONE -Apply a class to the UV value based on its value
DONE Define the getForecast function:
    DONE -Takes an argument of cityName
    DONE -Concatenates the city name together with the rest of the OWM API call URL and the API key
    DONE -Performs an ajax call to retrieve data using the concatenated URL
    DONE -If successful:
        DONE -create 5 card for the next 5 day forecast
DONE Define the createCityHistory function:
    DONE Creates a new element for each element in the citiesHistory array
DONE When you hit search, save the searched city in the array and store in local storage
DONE Clear out old forecast cards before creating new ones 
DONE Fix forecast temperature - request metric units
DONE Fix past search button clicks - not working
DONE Check whether clicking on a previously searched city reorders the list
DONE If there is nothing in the searchHistory, do not display the RHS
If the API call is not successful, return the user a message saying something like "Sorry, we couldn't find the city you searched for" and does not update the weather and forecast

style.css
DONE Add styling for UV categorisation classes
Make the page responsive
Comments on style.css

Readme

Optional extras
-hover behaviour over the city history and show mouse icon over the city
-When you hover over the UV index it explains the scale